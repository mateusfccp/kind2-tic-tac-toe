use Bool/{and, if}
use GameState/{restart, in_progress, draw, winner, put_move, move_cursor, switch_debug_mode}

main: Game

use init = (GameState/new _)

use when = λkey λstate
  let pressing = λ(keycode: Key) (U48/to_bool (== key keycode))
  (if _ (pressing Key/r)
    (restart state)
  (if _ (pressing Key/d)
    (switch_debug_mode state)

    match state {
      in_progress:
        (if _ (pressing Key/enter)
          (put_move state)
        (if _ (and (pressing Key/x) state.debug_mode)
          (in_progress Player/x state.cursor_position state.board state.debug_mode)
        (if _ (and (pressing Key/o) state.debug_mode)
           (in_progress Player/o state.cursor_position state.board state.debug_mode)
  
        // Else
        let direction = (Direction/from_keycode key)
        match direction {
          Maybe/some: (move_cursor state direction.value)
          Maybe/none: state
        })))
      draw: state
      winner: state
    }))

(Game/new init when)
