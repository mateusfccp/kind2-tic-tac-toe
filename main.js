const App = (S_1) => null;
const App_new = (S_1) => (init_2) => (tick_3) => (when_4) => (P_5) => (new_6) => new_6(init_2)(tick_3)(when_4);
const Char = null;
const Direction = null;
const Direction_down = (P_1) => (left_2) => (up_3) => (right_4) => (down_5) => down_5;
const Direction_fromKeycode = (keycode_1) => U48_if(null)(Math.floor(keycode_1 === 37))(Maybe_some(null)(Direction_left))(U48_if(null)(Math.floor(keycode_1 === 38))(Maybe_some(null)(Direction_up))(U48_if(null)(Math.floor(keycode_1 === 39))(Maybe_some(null)(Direction_right))(U48_if(null)(Math.floor(keycode_1 === 40))(Maybe_some(null)(Direction_down))(Maybe_none(null)))));
const Direction_left = (P_1) => (left_2) => (up_3) => (right_4) => (down_5) => left_2;
const Direction_match = (P_1) => (left_2) => (up_3) => (right_4) => (down_5) => (direction_6) => direction_6(P_1)(left_2)(up_3)(right_4)(down_5);
const Direction_right = (P_1) => (left_2) => (up_3) => (right_4) => (down_5) => right_4;
const Direction_up = (P_1) => (left_2) => (up_3) => (right_4) => (down_5) => up_3;
const GameState = null;
const GameState_draw = (board_1) => (P_2) => (inProgress_3) => (draw_4) => (winner_5) => draw_4(board_1);
const GameState_inProgress = (currentPlayer_1) => (cursorPosition_2) => (board_3) => (P_4) => (inProgress_5) => (draw_6) => (winner_7) => inProgress_5(currentPlayer_1)(cursorPosition_2)(board_3);
const GameState_match = (P_1) => (inProgress_2) => (draw_3) => (winner_4) => (gameState_5) => gameState_5(P_1)(inProgress_2)(draw_3)(winner_4);
const GameState_moveCursor = (state_1) => (direction_2) => (() => { const forward_3 = (n_3) => Math.floor(Math.floor(n_3 + 1) % 3); return (() => { const backward_4 = (n_4) => (() => { const neg1_5 = Math.floor(0 - 1); return (() => { const n_6 = Math.floor(n_4 - 1); return U48_if(null)(Math.floor(n_6 === neg1_5))(2)(n_6); })(); })(); return (() => { const state_P_5 = null; return (() => { const state_inProgress_6 = (state_currentPlayer_6) => (state_cursorPosition_7) => (state_board_8) => (() => { const position_9 = (() => { const direction_P_9 = null; return (() => { const direction_left_10 = Pair_mapFst(null)(null)(null)(state_cursorPosition_7)(backward_4); return (() => { const direction_up_11 = Pair_mapSnd(null)(null)(null)(state_cursorPosition_7)(backward_4); return (() => { const direction_right_12 = Pair_mapFst(null)(null)(null)(state_cursorPosition_7)(forward_3); return (() => { const direction_down_13 = Pair_mapSnd(null)(null)(null)(state_cursorPosition_7)(forward_3); return Direction_match(direction_P_9)(direction_left_10)(direction_up_11)(direction_right_12)(direction_down_13)(direction_2); })(); })(); })(); })(); })(); return GameState_inProgress(state_currentPlayer_6)(position_9)(state_board_8); })(); return (() => { const state_draw_7 = (state_board_7) => state_1; return (() => { const state_winner_8 = (state_player_8) => (state_board_9) => state_1; return GameState_match(state_P_5)(state_inProgress_6)(state_draw_7)(state_winner_8)(state_1); })(); })(); })(); })(); })(); })();
const GameState_winner = (player_1) => (board_2) => (P_3) => (inProgress_4) => (draw_5) => (winner_6) => winner_6(player_1)(board_2);
const List = (T_1) => null;
const List_cons = (T_1) => (head_2) => (tail_3) => (P_4) => (cons_5) => (nil_6) => cons_5(head_2)(tail_3);
const List_nil = (T_1) => (P_2) => (cons_3) => (nil_4) => nil_4;
const Maybe = (T_1) => null;
const Maybe_match = (A_1) => (P_2) => (s_3) => (n_4) => (ma_5) => ma_5(P_2)(s_3)(n_4);
const Maybe_none = (T_1) => (P_2) => (some_3) => (none_4) => none_4;
const Maybe_some = (T_1) => (value_2) => (P_3) => (some_4) => (none_5) => some_4(value_2);
const Move = null;
const Move_new = (player_1) => (cell_2) => (P_3) => (new_4) => new_4(player_1)(cell_2);
const Nat = null;
const Nat_succ = (n_1) => (P_2) => (succ_3) => (zero_4) => succ_3(n_1);
const Nat_zero = (P_1) => (succ_2) => (zero_3) => zero_3;
const Pair = (A_1) => (B_2) => null;
const Pair_mapFst = (A_1) => (B_2) => (T_3) => (p_4) => (f_5) => (() => { const p_P_6 = null; return (() => { const p_new_7 = (p_fst_7) => (p_snd_8) => Pair_new(T_3)(B_2)(f_5(p_fst_7))(p_snd_8); return Pair_match(null)(null)(p_P_6)(p_new_7)(p_4); })(); })();
const Pair_mapSnd = (A_1) => (B_2) => (T_3) => (p_4) => (f_5) => (() => { const p_P_6 = null; return (() => { const p_new_7 = (p_fst_7) => (p_snd_8) => Pair_new(A_1)(T_3)(p_fst_7)(f_5(p_snd_8)); return Pair_match(null)(null)(p_P_6)(p_new_7)(p_4); })(); })();
const Pair_match = (A_1) => (B_2) => (P_3) => (new_4) => (pair_5) => pair_5(P_3)(new_4);
const Pair_new = (A_1) => (B_2) => (a_3) => (b_4) => (P_5) => (new_6) => new_6(a_3)(b_4);
const Player = null;
const Player_o = (P_1) => (x_2) => (o_3) => o_3;
const Player_x = (P_1) => (x_2) => (o_3) => x_2;
const String = List(Char);
const String_cons = (head_1) => (tail_2) => (P_3) => (cons_4) => (nil_5) => cons_4(head_1)(tail_2);
const String_nil = (P_1) => (cons_2) => (nil_3) => nil_3;
const U48_if = (P_1) => (x_2) => (t_3) => (f_4) => (() => { const x_5_1 = x_2; switch (x_5_1) { case 0: return f_4; default: return ((x_5_1 => (() => { const x_1_6 = x_5_1; return t_3; })())((x_5_1) - 1)); } })();
const main = (() => { const init_1 = GameState_inProgress(Player_x)(Pair_new(null)(null)(0)(0))(List_cons(null)(Move_new(Player_x)(Pair_new(null)(null)(0)(0)))(List_cons(null)(Move_new(Player_x)(Pair_new(null)(null)(1)(1)))(List_cons(null)(Move_new(Player_x)(Pair_new(null)(null)(2)(2)))(List_cons(null)(Move_new(Player_o)(Pair_new(null)(null)(0)(1)))(List_cons(null)(Move_new(Player_o)(Pair_new(null)(null)(2)(0)))(List_nil(null))))))); return (() => { const tick_2 = (state_2) => state_2; return (() => { const when_3 = (key_3) => (state_4) => (() => { const state_P_5 = null; return (() => { const state_inProgress_6 = (state_currentPlayer_6) => (state_cursorPosition_7) => (state_board_8) => (() => { const direction_9 = Direction_fromKeycode(key_3); return (() => { const direction_P_10 = null; return (() => { const direction_some_11 = (direction_value_11) => GameState_moveCursor(state_4)(direction_value_11); return (() => { const direction_none_12 = state_4; return Maybe_match(null)(direction_P_10)(direction_some_11)(direction_none_12)(direction_9); })(); })(); })(); })(); return (() => { const state_draw_7 = (state_board_7) => state_4; return (() => { const state_winner_8 = (state_player_8) => (state_board_9) => state_4; return GameState_match(state_P_5)(state_inProgress_6)(state_draw_7)(state_winner_8)(state_4); })(); })(); })(); })(); return App_new(null)(init_1)(tick_2)(when_3); })(); })(); })();

