use Direction/{left, up, right, down}
use GameState/{inProgress, draw, winner}

moveCursor
- state: GameState
- direction: Direction
: GameState

use forward = λn (% (+ n 1) 3)
use backward = λn
  let neg1 = (- 0 1)
  let n = (- n 1)
  (U48/if _ (== n neg1) 2 n)

match state {
  inProgress:
    use position = match direction {
      left:  (Pair/mapFst _ _ _ state.cursorPosition backward)
      up:    (Pair/mapSnd _ _ _ state.cursorPosition backward)
      right: (Pair/mapFst _ _ _ state.cursorPosition forward)
      down:  (Pair/mapSnd _ _ _ state.cursorPosition forward)
    }

    (inProgress state.currentPlayer position state.board)
  draw: state
  winner: state
}